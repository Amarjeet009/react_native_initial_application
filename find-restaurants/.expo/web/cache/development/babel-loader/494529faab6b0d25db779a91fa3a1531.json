{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\react_native_applications\\\\find-restaurants\\\\src\\\\screens\\\\ResultShowScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport CallAPIs from \"../api/CallAPIs\";\n\nvar ResultShowScreent = function ResultShowScreent(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var id = navigation.getParam('id');\n\n  var getResult = function getResult(id) {\n    var response;\n    return _regeneratorRuntime.async(function getResult$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(CallAPIs.get(\"/\" + id));\n\n          case 3:\n            response = _context.sent;\n            setResult(response.data);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setErrorMessage('Something went wrong');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getResult(id);\n  }), [];\n\n  if (!result) {\n    return null;\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Restaurants : \", result.name), React.createElement(Text, {\n    style: styles.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Contact : \", result.phone), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \" Rating: \", result.rating), React.createElement(FlatList, {\n    data: result.photos,\n    keyExtractor: function keyExtractor(photo) {\n      return photo;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Address: \", result.location.address1 != null ? result.location.address1 : null, \" \", result.location.address2 != '' ? result.location.address2 : null, \" \", result.location.address3 != '' ? result.location.address3 : null), result.location.city != '' ? React.createElement(Text, {\n    style: styles.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 36\n    }\n  }, \"City: \", result.location.city) : null, result.location.country != '' ? React.createElement(Text, {\n    style: styles.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 39\n    }\n  }, \"Country :\", result.location.country) : null, result.location.cross_streets != '' ? React.createElement(Text, {\n    style: styles.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 46\n    }\n  }, \"Cross Streets :\", result.location.cross_streets) : null, result.location.state != '' ? React.createElement(Text, {\n    style: styles.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 39\n    }\n  }, \"State :\", result.location.state) : null, result.location.zip_code != '' ? React.createElement(Text, {\n    style: styles.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 42\n    }\n  }, \"Zip: \", result.location.zip_code) : null));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginLeft: 15\n  },\n  image: {\n    width: 350,\n    height: 220,\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  name: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  card: {\n    width: 350,\n    height: 220,\n    backgroundColor: '#F8E3DE',\n    borderRadius: 5,\n    shadowColor: 'rgba(0,0,0,0.5)',\n    textAlign: 'center',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.5\n  }\n});\nexport default ResultShowScreent;","map":{"version":3,"sources":["E:/react_native_applications/find-restaurants/src/screens/ResultShowScreen.js"],"names":["React","useState","useEffect","CallAPIs","ResultShowScreent","navigation","result","setResult","errorMessage","setErrorMessage","id","getParam","getResult","get","response","data","styles","container","name","phone","rating","photos","photo","item","image","uri","card","location","address1","address2","address3","city","country","cross_streets","state","zip_code","StyleSheet","create","flex","marginLeft","width","height","borderRadius","marginBottom","fontWeight","fontSize","backgroundColor","shadowColor","textAlign","shadowOffset","shadowOpacity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView,FlatList,Image } from 'react-native';\r\nimport CallAPIs from \"../api/CallAPIs\";\r\n\r\nconst ResultShowScreent = ({ navigation }) => {\r\n    const [result, setResult] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const id = navigation.getParam('id');\r\n\r\n    const getResult = async id => {\r\n        try {\r\n            const response = await CallAPIs.get(`/${id}`);\r\n            setResult(response.data);\r\n        } catch (error) {\r\n            setErrorMessage('Something went wrong');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getResult(id);\r\n    }), [];\r\n\r\n    if (!result) {\r\n        return null;\r\n    }\r\n    return (<ScrollView style={styles.container}>\r\n        <Text style={styles.name}>\r\n        Restaurants : {result.name}\r\n        </Text >\r\n        <Text style={styles.name}>Contact : {result.phone}</Text>\r\n        <Text> Rating: {result.rating}</Text>\r\n        <FlatList\r\n        data={result.photos}\r\n        keyExtractor={photo => photo}\r\n        renderItem={({ item }) => {\r\n          return <Image style={styles.image} source={{ uri: item }} />;\r\n        }}\r\n      />\r\n      {/* <FlatList \r\n      data={result.location} \r\n      keyExtractor={location => location}\r\n      renderItem={({address}) => {\r\n          return (<Text>{address.display_address[0]}</Text>)\r\n      }}\r\n      \r\n      /> */}\r\n      <View style={styles.card}>\r\n      <Text style={styles.name}>Address: {result.location.address1 != null ? result.location.address1 : null} {result.location.address2 != '' ? result.location.address2 : null} {result.location.address3 != '' ? result.location.address3: null}</Text>\r\n      {result.location.city != ''? <Text style={styles.name}>City: {result.location.city}</Text>: null}\r\n      {result.location.country != ''? <Text style={styles.name}>Country :{result.location.country}</Text> : null}\r\n      {result.location.cross_streets != '' ? <Text style={styles.name}>Cross Streets :{result.location.cross_streets}</Text> : null}\r\n      {result.location.state != '' ?  <Text style={styles.name}>State :{result.location.state}</Text> : null}\r\n      {result.location.zip_code != ''?   <Text style={styles.name}>Zip: {result.location.zip_code}</Text> : null}\r\n      </View>\r\n    \r\n     \r\n    \r\n    </ScrollView>)\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginLeft: 15\r\n    },\r\n    image: {\r\n      width: 350,\r\n      height: 220,\r\n      borderRadius: 5,\r\n      marginBottom: 5\r\n    },\r\n    name: {\r\n      fontWeight: 'bold',\r\n      fontSize: 20\r\n    },\r\n    card:{\r\n        width: 350,\r\n        height: 220,\r\n        backgroundColor: '#F8E3DE',\r\n        borderRadius: 5,\r\n        shadowColor: 'rgba(0,0,0,0.5)',\r\n        textAlign: 'center',\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 1\r\n        },\r\n        shadowOpacity:0.5,\r\n      }\r\n  });\r\n\r\nexport default ResultShowScreent;"]},"metadata":{},"sourceType":"module"}