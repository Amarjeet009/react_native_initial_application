{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport CallAPIs from \"../../api/CallAPIs\";\nexport default (function () {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var searchApi = function searchApi(searchTerm) {\n    var response;\n    return _regeneratorRuntime.async(function searchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(CallAPIs.get('/search', {\n              params: {\n                limit: 50,\n                term: searchTerm,\n                location: 'san jose'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            setResults(response.data.businesses);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setErrorMessage('Something went wrong');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    searchApi('pasta');\n  }, []);\n  return [searchApi, results, errorMessage];\n});","map":{"version":3,"sources":["E:/react_native_applications/find-restaurants/src/screens/hooks/useSearchResult.js"],"names":["useState","useEffect","CallAPIs","results","setResults","errorMessage","setErrorMessage","searchApi","searchTerm","get","params","limit","term","location","response","data","businesses"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP;AAEA,gBAAe,YAAM;AAAA,kBACaF,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,MACVG,OADU;AAAA,MACDC,UADC;;AAAA,mBAEuBJ,QAAQ,CAAC,EAAD,CAF/B;AAAA;AAAA,MAEVK,YAFU;AAAA,MAEIC,eAFJ;;AAIjB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESN,QAAQ,CAACO,GAAT,CAAa,SAAb,EAAwB;AAC7CC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,KAAK,EAAE,EADD;AAENC,gBAAAA,IAAI,EAAEJ,UAFA;AAGNK,gBAAAA,QAAQ,EAAE;AAHJ;AADqC,aAAxB,CAFT;;AAAA;AAERC,YAAAA,QAFQ;AASdV,YAAAA,UAAU,CAACU,QAAQ,CAACC,IAAT,CAAcC,UAAf,CAAV;AATc;AAAA;;AAAA;AAAA;AAAA;AAWdV,YAAAA,eAAe,CAAC,sBAAD,CAAf;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAkBAL,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,SAAS,CAAC,OAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,CAACA,SAAD,EAAYJ,OAAZ,EAAqBE,YAArB,CAAP;AACH,CA3BD","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport CallAPIs from '../../api/CallAPIs';\r\n\r\nexport default () => {\r\n    const [results, setResults] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n  \r\n    const searchApi = async searchTerm => {\r\n      try {\r\n        const response = await CallAPIs.get('/search', {\r\n          params: {\r\n            limit: 50,\r\n            term: searchTerm,\r\n            location: 'san jose'\r\n          }\r\n        });\r\n        setResults(response.data.businesses);\r\n      } catch (err) {\r\n        setErrorMessage('Something went wrong');\r\n      }\r\n    };\r\n  \r\n    // Call searchApi when component\r\n    // is first rendered.  BAD CODE!\r\n    // searchApi('pasta');\r\n    useEffect(() => {\r\n      searchApi('pasta');\r\n    }, []);\r\n  \r\n    return [searchApi, results, errorMessage];\r\n}"]},"metadata":{},"sourceType":"module"}